// lib/models/vulnerability_model.dart
enum VulnerabilityType {
  weakCredentials,
  openPorts,
  insecureProtocols,
  defaultCredentials,
  firmwareIssues,
  encryptionIssues,
  authBypass,
  knownCve
}

class Vulnerability {
  final String type;
  final String severity;
  final String description;
  final String affectedComponent;
  final String recommendation;
  final List<String> cveIds;
  final double? cvssScore;
  final Map<String, dynamic> technicalDetails;
  final Map<String, dynamic>? rawData;

  Vulnerability({
    required this.type,
    required this.severity,
    required this.description,
    required this.affectedComponent,
    required this.recommendation,
    this.cveIds = const [],
    this.cvssScore,
    this.technicalDetails = const {},
    this.rawData,
  });

  factory Vulnerability.fromJson(Map<String, dynamic> json) {
    return Vulnerability(
      type: json['type'] ?? 'unknown',
      severity: json['severity'] ?? 'medium',
      description: json['description'] ?? 'Unknown vulnerability',
      affectedComponent: json['affected_component'] ?? '',
      recommendation: json['recommendation'] ?? '',
      cveIds: List<String>.from(json['cve_ids'] ?? []),
      cvssScore: json['cvss_score']?.toDouble(),
      technicalDetails: json['technical_details'] ?? {},
      rawData: json,
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'type': type,
      'severity': severity,
      'description': description,
      'affected_component': affectedComponent,
      'recommendation': recommendation,
      'cve_ids': cveIds,
      'cvss_score': cvssScore,
      'technical_details': technicalDetails,
      'raw_data': rawData,
    };
  }
}